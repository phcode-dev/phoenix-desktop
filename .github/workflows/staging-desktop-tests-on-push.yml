name: On-Push staging Win/Mac/Linux run full tests suite

on:
  push:
    branches: [ staging ]

permissions:
  contents: read
  issues: write

jobs:

  testDesktopLinux:
    runs-on: ubuntu-latest
    timeout-minutes: 90
    steps:
      - uses: actions/checkout@v3
      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: 18
      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable

      - name: install dependencies (ubuntu only)
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf
          sudo apt install build-essential curl wget file libssl-dev libayatana-appindicator3-dev
          sudo apt-get install xvfb

      - name: npm install ci deps
        run: npm ci

      - name: Download phoenix and build build phoenix dist-test
        run: |
          npm run _ci-clonePhoenixForTests
          cd ..
          cd phoenix
          npm ci
          npm run build
          npm run release:staging

      - name: build test runner
        run: |
          npm ci
          npm run releaseDistTestDebug

      - name: Run tauri unit tests
        uses: nick-fields/retry@v2
        with:
          timeout_minutes: 12
          max_attempts: 3
          command: xvfb-run ./src-tauri/target/debug/phoenix-test --run-tests=unit -q

      - name: Run tauri integration tests
        uses: nick-fields/retry@v2
        with:
          timeout_minutes: 12
          max_attempts: 3
          command: xvfb-run ./src-tauri/target/debug/phoenix-test --run-tests=integration -q

      - name: Run tauri mainview tests
        uses: nick-fields/retry@v2
        with:
          timeout_minutes: 12
          max_attempts: 3
          command: xvfb-run ./src-tauri/target/debug/phoenix-test --run-tests=mainview -q

      - name: Run tauri LegacyInteg tests
        uses: nick-fields/retry@v2
        with:
          timeout_minutes: 20
          max_attempts: 3
          command: xvfb-run ./src-tauri/target/debug/phoenix-test --run-tests=LegacyInteg -q

  testDesktopMac:
    runs-on: macos-latest
    timeout-minutes: 90
    steps:
      - uses: actions/checkout@v3
      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: 18
      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable

      - name: npm install ci deps
        run: npm ci

      - name: Download phoenix and build build phoenix dist-test
        run: |
          npm run _ci-clonePhoenixForTests
          cd ..
          cd phoenix
          npm ci
          npm run build
          npm run release:staging

      - name: build test runner
        run: |
          npm ci
          npm run releaseDistTestDebug

      - name: Run tauri unit tests
        uses: nick-fields/retry@v2
        with:
          timeout_minutes: 12
          max_attempts: 3
          command: ./src-tauri/target/debug/phoenix-test --run-tests=unit -q

      - name: Run tauri integration tests
        uses: nick-fields/retry@v2
        with:
          timeout_minutes: 12
          max_attempts: 3
          command: ./src-tauri/target/debug/phoenix-test --run-tests=integration -q

      - name: Run tauri mainview tests
        uses: nick-fields/retry@v2
        with:
          timeout_minutes: 12
          max_attempts: 3
          command: ./src-tauri/target/debug/phoenix-test --run-tests=mainview -q

      - name: Run tauri LegacyInteg tests
        uses: nick-fields/retry@v2
        with:
          timeout_minutes: 30
          max_attempts: 3
          command: ./src-tauri/target/debug/phoenix-test --run-tests=LegacyInteg -q

  testDesktopWindows:
    runs-on: windows-latest
    timeout-minutes: 90
    steps:
      - uses: actions/checkout@v3
      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: 18
      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable

      - name: npm install ci deps
        run: npm ci

      - name: Download phoenix and build build phoenix dist-test
        run: |
          npm run _ci-clonePhoenixForTests
          cd ..
          cd phoenix
          npm ci
          npm run build
          npm run release:staging

      - name: build test runner
        run: |
          npm ci
          npm run releaseDistTestDebug

      - name: Run tauri unit tests in windows
        # GUI apps in windows doesn't log on console. so we capture the output to a text file and print it, then fail on error.
        uses: nick-fields/retry@v2
        id: windowsRunUnit
        continue-on-error: true
        with:
          timeout_minutes: 12
          max_attempts: 3
          command: .\src-tauri\target\debug\phoenix-test.exe --run-tests=unit -q > output-unit.txt 2>&1
          shell: cmd

      - name: Print windows unit test output to console
        run: type output-unit.txt
        shell: cmd

      - name: Run tauri integration tests in windows
        uses: nick-fields/retry@v2
        id: windowsRunIntegration
        continue-on-error: true
        with:
          timeout_minutes: 12
          max_attempts: 3
          command: .\src-tauri\target\debug\phoenix-test.exe --run-tests=integration -q > output-integration.txt 2>&1
          shell: cmd

      - name: Print windows integration test output to console
        run: type output-integration.txt
        shell: cmd

      - name: Run tauri mainview tests in windows
        uses: nick-fields/retry@v2
        id: windowsRunMainview
        continue-on-error: true
        with:
          timeout_minutes: 12
          max_attempts: 3
          command: .\src-tauri\target\debug\phoenix-test.exe --run-tests=mainview -q > output-mainview.txt 2>&1
          shell: cmd

      - name: Print windows mainview test output to console
        run: type output-mainview.txt
        shell: cmd

      - name: Run tauri LegacyInteg tests in windows
        uses: nick-fields/retry@v2
        id: windowsRunLegacyInteg
        continue-on-error: true
        with:
          timeout_minutes: 30
          max_attempts: 3
          command: .\src-tauri\target\debug\phoenix-test.exe --run-tests=LegacyInteg -q > output-LegacyInteg.txt 2>&1
          shell: cmd

      - name: Print windows LegacyInteg test output to console
        run: type output-LegacyInteg.txt
        shell: cmd

      - name: Fail on test runs failed in windows
        if: steps.windowsRunUnit.outcome == 'failure' || steps.windowsRunIntegration.outcome == 'failure' || steps.windowsRunMainview.outcome == 'failure' || steps.windowsRunLegacyInteg.outcome == 'failure'
        run: |
          echo "Windows tests failed, marking step as failed"
          exit 1
        shell: cmd

  raiseIssue:
    needs: [ testDesktopLinux, testDesktopMac, testDesktopWindows]
    runs-on: ubuntu-latest
    if: |
      always()  && (    # This ensures that this job runs even if the previous jobs failed
        needs.testDesktopLinux.result == 'failure' || 
        needs.testDesktopMac.result == 'failure' ||
        needs.testDesktopWindows.result == 'failure' 
      )
    steps:
      - name: Check for failures and raise an issue
        uses: actions/github-script@v5
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const issueTitle = "Test failure on push to staging branch: commit ${{github.sha}}";
            const runURL = `https://github.com/${{github.repository}}/actions/runs/${{github.run_id}}`;
            let issueBody = `There was a test failure. Please investigate.\n\n[Check the failed run here](${runURL})\n\n`;
            
            if (needs.testDesktopLinux.result == 'failure') {
              issueBody += " - Desktop Linux tests failed.\n";
            }
            if (needs.testDesktopMac.result == 'failure') {
              issueBody += " - Desktop MacOS tests failed.\n";
            }
            if (needs.testDesktopWindows.result == 'failure') {
              issueBody += " - Desktop Windows tests failed.\n";
            }
            
            github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: issueTitle,
              body: issueBody
            });
